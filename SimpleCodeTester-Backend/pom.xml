<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>SimpleCodeTester</artifactId>
    <groupId>me.ialistannen</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>SimpleCodeTester-Backend</artifactId>

  <properties>
    <db.url>jdbc:sqlite:${project.build.directory}/data.db</db.url>

    <commons-text.version>1.10.0</commons-text.version>
    <flyway.version>8.3.0</flyway.version>
    <hikaricp.version>5.0.1</hikaricp.version>
    <jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
    <jooq.version>3.17.8</jooq.version>
    <jose4j.version>0.9.3</jose4j.version>
    <micrometer.version>1.10.4</micrometer.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring-boot.version>2.7.9</spring-boot.version>
    <sqlite.version>3.41.0.0</sqlite.version>

    <maven-antrun-plugin.version>3.0.0</maven-antrun-plugin.version>
  </properties>

  <build>
    <finalName>SimpleCodeTester</finalName>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot.version}</version>
        <executions>
          <execution>
            <id>boot-plugin</id>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Ensure that the target directory exists so that flyway can connect to ${db.url} -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <configuration>
              <target>
                <mkdir dir="${project.build.directory}"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>${flyway.version}</version>

        <configuration>
          <url>${db.url}</url>
          <locations>
            <location>filesystem:src/main/resources/db/migration</location>
          </locations>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>migrate</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>

      <!-- JOOQ -->
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>

        <configuration>
          <generator>
            <database>
              <includes>.*</includes>
              <!-- Associate data type rewrites with database columns -->
              <forcedTypes>
                <!-- Force SQLITE's Timestamps to be Instants in application code -->
                <forcedType>
                  <name>INSTANT</name>
                  <includeTypes>TIMESTAMP</includeTypes>
                </forcedType>
              </forcedTypes>
            </database>
            <target>
              <directory>target/generated-sources/jooq</directory>
              <packageName>org.jooq.codegen.db</packageName>
            </target>
          </generator>
          <jdbc>
            <url>${db.url}</url>
          </jdbc>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>


  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <version>${spring-boot.version}</version>
      <optional>true</optional>
    </dependency>

    <!--METRICS-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <version>${spring-boot.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <version>${micrometer.version}</version>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <version>${micrometer.version}</version>
    </dependency>

    <dependency>
      <groupId>org.bitbucket.b_c</groupId>
      <artifactId>jose4j</artifactId>
      <version>${jose4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${commons-text.version}</version>
    </dependency>

    <dependency>
      <groupId>me.ialistannen</groupId>
      <artifactId>SimpleCodeTester-Lib</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.jooq/jooq -->
    <dependency>
      <artifactId>jooq</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-codegen -->
    <dependency>
      <artifactId>jooq-codegen</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.jooq/jooq-meta -->
    <dependency>
      <artifactId>jooq-meta</artifactId>
      <groupId>org.jooq</groupId>
      <version>${jooq.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc -->
    <dependency>
      <artifactId>sqlite-jdbc</artifactId>
      <groupId>org.xerial</groupId>
      <version>${sqlite.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
    <dependency>
      <artifactId>HikariCP</artifactId>
      <groupId>com.zaxxer</groupId>
      <version>${hikaricp.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.flywaydb/flyway-core -->
    <dependency>
      <artifactId>flyway-core</artifactId>
      <groupId>org.flywaydb</groupId>
      <version>${flyway.version}</version>
    </dependency>

    <dependency>
      <groupId>jakarta.validation</groupId>
      <artifactId>jakarta.validation-api</artifactId>
      <version>${jakarta.validation-api.version}</version>
    </dependency>
  </dependencies>

</project>
